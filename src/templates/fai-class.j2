#!/bin/bash
# Dynamic FAI Class Configuration
# Generated by Ubuntu FAI Build System
# Hardware: {{ config.hardware.vendor }}
# Encryption: {{ config.encryption.enabled }}

# Set error handling
set -euo pipefail

# FAI class assignment based on configuration
# Classes are processed in order - later classes override earlier ones

# Base classes - always assigned
echo "UBUNTU"
echo "UBUNTU_DESKTOP" 
echo "AMD64"

# Hardware-specific classes
{% if config.hardware.vendor != "generic" -%}
echo "HARDWARE_{{ config.hardware.vendor.upper() }}"
{% endif %}

# Disk and storage classes
{% if config.hardware.target_ssd -%}
echo "TARGET_SSD"
{% endif %}

{% if config.hardware.disk_size_min_gb -%}
echo "DISK_SIZE_{{ config.hardware.disk_size_min_gb }}GB"
{% endif %}

# Encryption classes
{% if config.encryption.enabled -%}
echo "UBUNTU_ENCRYPTED"
echo "LUKS_{{ config.encryption.cipher.upper().replace('-', '_').replace(':', '_') }}"
echo "LUKS_KEYSIZE_{{ config.encryption.key_size }}"
{% else -%}
echo "UBUNTU_PLAIN"
{% endif %}

# Package and software classes
{% if config.packages.apt_packages or config.packages.deb_urls -%}
echo "CUSTOM_SOFTWARE"
{% endif %}

{% if config.packages.snap_packages -%}
echo "SNAP_PACKAGES"
{% endif %}

# Network configuration classes
{% if config.network.dhcp -%}
echo "NETWORK_DHCP"
{% else -%}
echo "NETWORK_STATIC"
{% endif %}

# User configuration classes
{% if config.user.ssh_authorized_keys -%}
echo "SSH_KEYS"
{% endif %}

{% if config.user.sudo_nopasswd -%}
echo "SUDO_NOPASSWD"
{% endif %}

# First-boot classes
{% if config.first_boot.enabled -%}
echo "FIRST_BOOT"
{% if config.first_boot.scripts -%}
{% for script in config.first_boot.scripts -%}
{% if script.type == "automated" -%}
echo "FIRST_BOOT_AUTO"
{% elif script.type == "manual" -%}
echo "FIRST_BOOT_MANUAL"
{% endif -%}
{% endfor -%}
{% endif -%}
{% endif %}

# Development and tools classes
{% set dev_packages = ['git', 'vim', 'code', 'build-essential', 'python3-pip', 'nodejs', 'npm'] -%}
{% if config.packages.apt_packages -%}
{% if dev_packages | select('in', config.packages.apt_packages) | list -%}
echo "DEVELOPMENT_TOOLS"
{% endif -%}
{% endif %}

# Docker class if docker packages are included
{% if 'docker.io' in config.packages.apt_packages or 'docker-ce' in config.packages.apt_packages -%}
echo "DOCKER"
{% endif %}

# Multimedia class for media packages
{% set multimedia_packages = ['vlc', 'gimp', 'audacity', 'blender', 'kdenlive'] -%}
{% if config.packages.apt_packages -%}
{% if multimedia_packages | select('in', config.packages.apt_packages) | list -%}
echo "MULTIMEDIA"
{% endif -%}
{% endif %}

# Office productivity class
{% set office_packages = ['libreoffice', 'thunderbird', 'evolution'] -%}
{% if config.packages.apt_packages -%}
{% if office_packages | select('in', config.packages.apt_packages) | list -%}
echo "OFFICE_PRODUCTIVITY"
{% endif -%}
{% endif %}

# Security tools class
{% set security_packages = ['ufw', 'fail2ban', 'clamav', 'rkhunter'] -%}
{% if config.packages.apt_packages -%}
{% if security_packages | select('in', config.packages.apt_packages) | list -%}
echo "SECURITY_TOOLS"
{% endif -%}
{% endif %}

# Final class - always last to ensure proper ordering
echo "FAIEND"

# Export variables for use in other FAI scripts
export FAI_HARDWARE_VENDOR="{{ config.hardware.vendor }}"
export FAI_ENCRYPTION_ENABLED="{{ config.encryption.enabled | lower }}"
export FAI_USER_NAME="{{ config.user.username }}"
export FAI_HOSTNAME="{{ config.network.hostname }}"
export FAI_BUILD_TIMESTAMP="{{ build_timestamp | default('unknown') }}"

# Log class assignment for debugging
{
    echo "=== FAI Class Assignment ==="
    echo "Hardware Vendor: {{ config.hardware.vendor }}"
    echo "Target SSD: {{ config.hardware.target_ssd }}"
    echo "Encryption Enabled: {{ config.encryption.enabled }}"
    {% if config.encryption.enabled -%}
    echo "Encryption Cipher: {{ config.encryption.cipher }}"
    echo "Key Size: {{ config.encryption.key_size }}"
    {% endif -%}
    echo "Custom Packages: {{ config.packages.apt_packages | length }}"
    echo "DEB URLs: {{ config.packages.deb_urls | length }}"
    echo "First Boot Scripts: {{ config.first_boot.scripts | length }}"
    echo "Build Date: {{ build_timestamp | default('unknown') }}"
    echo "==========================="
} >> $LOGDIR/fai-class-assignment.log 2>/dev/null || true