# Ubuntu FAI Build System Docker Image with Conda
# 使用 conda 管理 Python 环境的多阶段构建

# 基础阶段 - 安装系统依赖和 Miniconda
FROM ubuntu:24.04@sha256:b359f1067efa76f37863778f7b6d0e8d911e3ee8efa807ad01fbf5dc1ef9006b AS base

# 避免交互式安装提示
ENV DEBIAN_FRONTEND=noninteractive

# 更新包列表并安装核心系统依赖
RUN apt-get update && \
    # 安装通用依赖
    apt-get install -y \
        curl \
        wget \
        ca-certificates \
        sudo \
        debootstrap \
        squashfs-tools \
        genisoimage \
    && \
    # 尝试安装 FAI 相关包 (可能在某些架构上不可用)
    (apt-get install -y \
        fai-server \
        fai-client \
        fai-cd \
        isolinux \
        syslinux \
    || echo "某些 FAI 包在此架构上不可用，跳过安装") && \
    rm -rf /var/lib/apt/lists/* && \
    apt-get clean

# 安装 Miniforge (避免 conda ToS 问题)
ENV CONDA_DIR=/opt/conda
ENV PATH=$CONDA_DIR/bin:$PATH

RUN ARCH=$(uname -m) && \
    if [ "$ARCH" = "x86_64" ]; then \
        MINIFORGE_ARCH="x86_64"; \
    elif [ "$ARCH" = "aarch64" ]; then \
        MINIFORGE_ARCH="aarch64"; \
    else \
        echo "不支持的架构: $ARCH" && exit 1; \
    fi && \
    wget --quiet https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-Linux-${MINIFORGE_ARCH}.sh -O /tmp/miniforge.sh && \
    /bin/bash /tmp/miniforge.sh -b -p $CONDA_DIR && \
    rm /tmp/miniforge.sh && \
    $CONDA_DIR/bin/conda clean --all --yes && \
    ln -s $CONDA_DIR/etc/profile.d/conda.sh /etc/profile.d/conda.sh && \
    echo ". $CONDA_DIR/etc/profile.d/conda.sh" >> ~/.bashrc && \
    echo "conda activate base" >> ~/.bashrc

# 配置 conda (Miniforge 默认使用 conda-forge)
RUN conda config --set always_yes yes --set changeps1 no && \
    conda update -q conda

# 创建非 root 用户
RUN groupadd --gid 1001 fai && \
    useradd --uid 1001 --gid fai --shell /bin/bash --create-home fai && \
    echo 'fai ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers && \
    chown -R fai:fai $CONDA_DIR

# 切换到 fai 用户
USER fai
WORKDIR /home/fai

# 确保 conda 在用户环境中可用
RUN echo ". $CONDA_DIR/etc/profile.d/conda.sh" >> ~/.bashrc && \
    echo "conda activate ubuntu-fai" >> ~/.bashrc

# 应用程序构建阶段
FROM base AS builder

# 复制环境配置文件
COPY --chown=fai:fai environment.yml /tmp/environment.yml

# 创建 conda 环境 (仅使用 conda-forge)
RUN conda env create -f /tmp/environment.yml

# 验证环境创建成功
RUN conda activate ubuntu-fai && python --version && pip list

# 生产阶段
FROM base AS production

# 从构建阶段复制 conda 环境
COPY --from=builder --chown=fai:fai $CONDA_DIR $CONDA_DIR

# 设置工作目录
WORKDIR /app

# 创建必要的目录
RUN mkdir -p /app/output /app/fai-config /tmp/fai-build && \
    sudo chown -R fai:fai /app /tmp/fai-build

# 复制应用程序代码
COPY --chown=fai:fai . .

# 设置环境变量
ENV CONDA_DEFAULT_ENV=ubuntu-fai
ENV CONDA_PREFIX=$CONDA_DIR/envs/ubuntu-fai
ENV PATH=$CONDA_PREFIX/bin:$CONDA_DIR/bin:$PATH

# 暴露卷挂载点
VOLUME ["/app/output", "/app/config"]

# 创建环境激活脚本
RUN echo '#!/bin/bash' > /app/activate-env.sh && \
    echo 'source $CONDA_DIR/etc/profile.d/conda.sh' >> /app/activate-env.sh && \
    echo 'conda activate ubuntu-fai' >> /app/activate-env.sh && \
    echo 'exec "$@"' >> /app/activate-env.sh && \
    chmod +x /app/activate-env.sh

# 默认命令使用 conda 环境
ENTRYPOINT ["/app/activate-env.sh"]
CMD ["python", "build.py", "--help"]